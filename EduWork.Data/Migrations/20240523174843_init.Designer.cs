// <auto-generated />
using System;
using EduWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduWork.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240523174843_init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduWork.Entities.Overtime", b =>
                {
                    b.Property<Guid>("OvertimeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Hours")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.HasKey("OvertimeId");

                    b.HasIndex("UserId");

                    b.ToTable("Overtimes");
                });

            modelBuilder.Entity("EduWork.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("ProjectTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EduWork.Entities.ProjectType", b =>
                {
                    b.Property<Guid>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("TypeId");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("EduWork.Entities.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EduWork.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("OID")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("RoleId")
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduWork.Entities.User_WorkDay", b =>
                {
                    b.Property<Guid>("User_WorkdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("User_WorkdayId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkDayId");

                    b.ToTable("User_WorkDays");
                });

            modelBuilder.Entity("EduWork.Entities.WorkDay", b =>
                {
                    b.Property<Guid>("WorkDayId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActualTime")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<TimeSpan>("BreakTime")
                        .HasMaxLength(10)
                        .HasColumnType("time");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("Endtime")
                        .HasMaxLength(7)
                        .HasColumnType("time");

                    b.Property<int>("ScheduledTime")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<TimeOnly>("SetTime")
                        .HasMaxLength(7)
                        .HasColumnType("time");

                    b.HasKey("WorkDayId");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("EduWork.Entities.WorkOnProject", b =>
                {
                    b.Property<Guid>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleOnProject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WorkHours")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("WorkId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkOnProjects");
                });

            modelBuilder.Entity("EduWork.Entities.Overtime", b =>
                {
                    b.HasOne("EduWork.Entities.User", "User")
                        .WithMany("Overtimes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduWork.Entities.Project", b =>
                {
                    b.HasOne("EduWork.Entities.ProjectType", "ProjectType")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectType");
                });

            modelBuilder.Entity("EduWork.Entities.User", b =>
                {
                    b.HasOne("EduWork.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduWork.Entities.User_WorkDay", b =>
                {
                    b.HasOne("EduWork.Entities.User", "User")
                        .WithMany("User_WorkDays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduWork.Entities.WorkDay", "WorkDay")
                        .WithMany("User_WorkDays")
                        .HasForeignKey("WorkDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkDay");
                });

            modelBuilder.Entity("EduWork.Entities.WorkOnProject", b =>
                {
                    b.HasOne("EduWork.Entities.Project", "Project")
                        .WithMany("WorkOnProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduWork.Entities.User", "User")
                        .WithMany("WorkOnProjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduWork.Entities.Project", b =>
                {
                    b.Navigation("WorkOnProjects");
                });

            modelBuilder.Entity("EduWork.Entities.ProjectType", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EduWork.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EduWork.Entities.User", b =>
                {
                    b.Navigation("Overtimes");

                    b.Navigation("User_WorkDays");

                    b.Navigation("WorkOnProjects");
                });

            modelBuilder.Entity("EduWork.Entities.WorkDay", b =>
                {
                    b.Navigation("User_WorkDays");
                });
#pragma warning restore 612, 618
        }
    }
}
